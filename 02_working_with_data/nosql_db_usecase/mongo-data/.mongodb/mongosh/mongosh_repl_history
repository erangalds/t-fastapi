exit
show databases
db.dropDatabase()
show collections
db.courses.drop()
db.courses.find()
})
    "level": "Intermediate"
db.courses.deleteMany({
db.courses.find()
})
    "title": "FastAPI Authentication and Authorization"
db.courses.deleteOne({
})
    "level": "Beginner"
db.courses.find({
)
    }
        }//push adds another element to the array
            "topics": "core_concepts"
        $push: {
    {
    },
        "level": "Beginner"
    {
db.courses.updateMany(
})
    "title": "FastAPI Authentication and Authorization"
db.courses.find({
)
    },
        },     
            "updated_at": new Date()
            "is_published": true,
        $set: {
    {
    },
        "title": "FastAPI Authentication and Authorization"
    {
db.courses.updateOne(
})
    }
        },     
            "updated_at": new Date()
            "is_published": true,
        $set: {
    {
    },
    "title": "FastAPI Authentication and Authorization"
db.courses.updateOne({
}).count()
    "level": "Beginner"
db.courses.find({
db.courses.find().count()
db.courses.find().limit(2) // Get only 2 documents
})
    "duration_hours": -1 // descending order    
db.courses.find().sort({
})
    "duration_hours": 1
db.courses.find().sort({
db.courses.find().pretty()
})
    "_id": 0
    "duration_hours": 1,
    "title": 1,
db.courses.find({}, {
})
    }
        "$options": "i"
        "$regex": /FastAPI/,
    "title": {
db.courses.find({
})
    }
        "$regex": /FastAPI/
    "title": {
db.courses.find({
})
    }
        "$ne": "Beginner"
    "level": {
db.courses.find({
})
    }
        "$nin": ["Beginner", "Intermediate"]
    "level": {
db.courses.find({
})
    }
        "$in": ["Beginner", "Intermediate"]
    "level": {
db.courses.find({
})
    }
        "$lt": 18
        "$gt": 10,
    "duration_hours": {
db.courses.find({
})
    }
        "$lt": 14
        "$gt": 10,
    "duration_hours": {
db.courses.find({
})
    }
        "$lt": 10
    "duration_hours": {
db.courses.find({
})
    }
        "$gt": 10
    "duration_hours": {
db.courses.find({
])
    }
        "is_published": true 
        "level": "Intermediate",
        "topics": ["Pytest", "Testing strategies", "Dependency Injection"],
        "duration_hours": 20,
        "description": "Learn how to test your FastAPI apps and follow best practices.",
        "title": "FastAPI Testing and Best Practices",
    {
    },
        "is_published": true
        "level": "Advanced",
        "topics": ["SQLAlchemy", "MongoDB", "Docker", "Deployment"],
        "duration_hours": 16,
        "description": "Connect FastAPI to databases and deploy your applications.",
        "title": "Advanced FastAPI: Databases and Deployment",
    {
    },
        "is_published": false
        "level": "Intermediate",
        "topics": ["OAuth2", "JWT", "Permissions"],
        "duration_hours": 12,
        "description": "Secure your FastAPI applications with authentication and authorization.",
        "title": "FastAPI Authentication and Authorization",
    {
db.courses.insertMany([
})
    "is_published": true
    "level": "Beginner",
    "topics": ["Basics","Routing","Path Parameters","Query Parameters"],
    "duration_hours": 8,
    "description": "Learn the basics of building APIs with FastAPI",
    "title": "Introduction to FastAPI",
db.courses.insertOne({
show collections
show databases
db.courses.drop()
show collections
})
    }
        "$gt": 10
    "duration_hours": {
db.courses.find({
})
    "is_published": true
    "level": "Intermediate",
db.courses.find({
db.courses.find()
])
    }
        "is_published": true 
        "level": "Intermediate",
        "topics": ["Pytest", "Testing strategies", "Dependency Injection"],
        "duration": 16,
        "description": "Learn how to test your FastAPI apps and follow best practices.",
        "title": "FastAPI Testing and Best Practices",
    {
    },
        "is_published": true
        "level": "Advanced",
        "topics": ["SQLAlchemy", "MongoDB", "Docker", "Deployment"],
        "duration": 16,
        "description": "Connect FastAPI to databases and deploy your applications.",
        "title": "Advanced FastAPI: Databases and Deployment",
    {
    },
        "is_published": false
        "level": "Intermediate",
        "topics": ["OAuth2", "JWT", "Permissions"],
        "duration": 12,
        "description": "Secure your FastAPI applications with authentication and authorization.",
        "title": "FastAPI Authentication and Authorization",
    {
db.courses.insertMany([
})
    "is_published": true
    "level": "Beginner",
    "topics": ["Basics","Routing","Path Parameters","Query Parameters"],
    "duration_hours": 8,
    "description": "Learn the basics of building APIs with FastAPI",
    "title": "Introduction to FastAPI",
db.courses.insertOne({
db
show databases
use courses
show databases
show db
db
show collections
db.courses.drop()
db.courses.find({ 'level': 'Beginner' })
db.courses.find({ 'level': 'beginner' })
db.courses.find()
])
    }
        "level": "Intermediate",
        "topics": ["Pytest", "Testing strategies", "Dependency Injection"],
        "description": "Learn how to test your FastAPI apps and follow best practices.",
        "title": "FastAPI Testing and Best Practices",
    {
    },
        "level": "Advanced",
        "topics": ["SQLAlchemy", "MongoDB", "Docker", "Deployment"],
        "description": "Connect FastAPI to databases and deploy your applications.",
        "title": "Advanced FastAPI: Databases and Deployment",
    {
    },
        "level": "Intermediate",
        "topics": ["OAuth2", "JWT", "Permissions"],
        "description": "Secure your FastAPI applications with authentication and authorization.",
        "title": "FastAPI Authentication and Authorization",
    {
db.courses.insertMany([
})
    "level": "Beginner"
    "topics": ["Basics","Routing","Path Parameters","Query Parameters"],
    "description": "Learn the basics of building APIs with FastAPI",
    "title": "Introduction to FastAPI",
db.courses.insertOne({
db.mycollection.find({})
db.mycollection.find()
show collections
db
use mydemodb
show dbs
exit